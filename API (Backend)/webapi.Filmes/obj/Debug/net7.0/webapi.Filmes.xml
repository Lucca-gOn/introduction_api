<?xml version="1.0"?>
<doc>
    <assembly>
        <name>webapi.Filmes</name>
    </assembly>
    <members>
        <member name="P:webapi.Filmes.Controllers.FilmeController._filmeRepository">
            <summary>
            Objeto _filmeRepository que irá receber todos os métodos definidos na interface IFilmeRepository
            </summary>
        </member>
        <member name="M:webapi.Filmes.Controllers.FilmeController.#ctor">
            <summary>
            Instancia o objeto _filmeRepository para que haja referencia aos métodos no repositórios 
            </summary>
        </member>
        <member name="M:webapi.Filmes.Controllers.FilmeController.Get">
            <summary>
            Endpoint que aciona o método ListarTodos no repositório.
            </summary>
            <returns>A resposta para o usuario(front-end)</returns>
        </member>
        <member name="M:webapi.Filmes.Controllers.FilmeController.Post(webapi.Filmes.Domains.FilmeDomain)">
            <summary>
            Endpoint que aciona o método de cadastro Filme
            </summary>
            <param name="novoFilme">Objeto recebido na requisição</param>
            <returns>A resposta para o usuario(front-end)</returns>
        </member>
        <member name="M:webapi.Filmes.Controllers.FilmeController.GetById(System.Int32)">
            <summary>
            Endpoint que aciona o método de buscar por id
            </summary>
            <param name="id">Id do objeto a ser buscado</param>
            <returns>Status Code e objeto caso encontrado</returns>
        </member>
        <member name="M:webapi.Filmes.Controllers.FilmeController.UpdateById(webapi.Filmes.Domains.FilmeDomain)">
            <summary>
            Endpoint que aciona o método atualizar por ID
            </summary>
            <param name="id">Id do objeto a ser atualizado</param>
            <returns>Status Code e objeto caso atualizado</returns>
        </member>
        <member name="M:webapi.Filmes.Controllers.FilmeController.UpdateByUrl(System.Int32,webapi.Filmes.Domains.FilmeDomain)">
            <summary>
            Endpoint que aciona o método atualizar por URL
            </summary>
            <param name="id">Id do objeto a ser atualizado</param>
            <returns>Status Code e objeto caso atualizado</returns>
        </member>
        <member name="P:webapi.Filmes.Controllers.GeneroController._generoRepository">
            <summary>
            Objeto _generoRepository que irá receber todos os métodos definidos na interface IGeneroRepository
            </summary>
        </member>
        <member name="M:webapi.Filmes.Controllers.GeneroController.#ctor">
            <summary>
            Instancia o objeto _generoRepository para que haja referencia aos métodos no repositórios 
            </summary>
        </member>
        <member name="M:webapi.Filmes.Controllers.GeneroController.Get">
            <summary>
            Endpoint que aciona o método ListarTodos no repositório.
            </summary>
            <returns>A resposta para o usuario(front-end)</returns>
        </member>
        <member name="M:webapi.Filmes.Controllers.GeneroController.Post(webapi.Filmes.Domains.GeneroDomain)">
            <summary>
            Endpoint que aciona o método de cadastro Gênero 
            </summary>
            <param name="novoGenero">Objeto recebido na requisição</param>
            <returns>A resposta para o usuario(front-end)</returns>
        </member>
        <member name="M:webapi.Filmes.Controllers.GeneroController.GetById(System.Int32)">
            <summary>
            Endpoint que aciona o método de buscar por id
            </summary>
            <param name="id">Id do objeto a ser buscado</param>
            <returns>Status Code e objeto caso encontrado</returns>
        </member>
        <member name="M:webapi.Filmes.Controllers.GeneroController.UpdateById(webapi.Filmes.Domains.GeneroDomain)">
            <summary>
            Endpoint que aciona o método atualizar por ID
            </summary>
            <param name="id">Id do objeto a ser atualizado</param>
            <returns>Status Code e objeto caso atualizado</returns>
        </member>
        <member name="M:webapi.Filmes.Controllers.GeneroController.UpdateByUrl(System.Int32,webapi.Filmes.Domains.GeneroDomain)">
            <summary>
            Endpoint que aciona o método atualizar por URL
            </summary>
            <param name="id">Id do objeto a ser atualizado</param>
            <returns>Status Code e objeto caso atualizado</returns>
        </member>
        <member name="T:webapi.Filmes.Domains.GeneroDomain">
            <summary>
            Classe que representa a entidade (Tabela) Genero
            </summary>
        </member>
        <member name="M:webapi.Filmes.Interfaces.IFilmeRepository.Cadastrar(webapi.Filmes.Domains.FilmeDomain)">
            <summary>
            Interface responsável pelo repositório FilmeRepository
            Definir os métodos que serão implementados pelo FilmeRepository
            </summary>
        </member>
        <member name="M:webapi.Filmes.Interfaces.IFilmeRepository.ListarTodos">
            <summary>
            Listar todos os objetos cadastrados
            </summary>
            <returns>Lista com os objetos</returns>
        </member>
        <member name="M:webapi.Filmes.Interfaces.IFilmeRepository.AtualizarIdCorpo(webapi.Filmes.Domains.FilmeDomain)">
            <summary>
            Atualizar um objeto existente passando seu id pelo corpo da requisição
            </summary>
            <param name="genero">Objeto atualizado (novas informações)</param>
        </member>
        <member name="M:webapi.Filmes.Interfaces.IFilmeRepository.AtualizarUrl(System.Int32,webapi.Filmes.Domains.FilmeDomain)">
            <summary>
            Atualizar objeto existente passando o seu id pela url
            </summary>
            <param name="id">Id do objeto que será atualizado</param>
            <param name="genero">Objeto atualizado(novas informações)</param>
        </member>
        <member name="M:webapi.Filmes.Interfaces.IFilmeRepository.Deletar(System.Int32)">
            <summary>
            Deletar um objeto
            </summary>
            <param name="id">Id do objeto que será deletado</param>
        </member>
        <member name="M:webapi.Filmes.Interfaces.IFilmeRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um objeto através do seu id
            </summary>
            <param name="id">Id do objeto a ser buscado</param>
            <returns>Objeto buscado</returns>
        </member>
        <member name="T:webapi.Filmes.Interfaces.IGeneroRepository">
            <summary>
            Interface responsável pelo repositório GeneroRepository
            Definir os métodos que serão implementados pelo GeneroRepository
            </summary>
        </member>
        <member name="M:webapi.Filmes.Interfaces.IGeneroRepository.Cadastrar(webapi.Filmes.Domains.GeneroDomain)">
            <summary>
            Cadastrar um novo gênero
            </summary>
            <param name="novoGenero">Cadastra um novo gênero de filme</param>
        </member>
        <member name="M:webapi.Filmes.Interfaces.IGeneroRepository.ListarTodos">
            <summary>
            Listar todos os objetos cadastrados
            </summary>
            <returns>Lista com os objetos</returns>
        </member>
        <member name="M:webapi.Filmes.Interfaces.IGeneroRepository.AtualizarIdCorpo(webapi.Filmes.Domains.GeneroDomain)">
            <summary>
            Atualizar um objeto existente passando seu id pelo corpo da requisição
            </summary>
            <param name="genero">Objeto atualizado (novas informações)</param>
        </member>
        <member name="M:webapi.Filmes.Interfaces.IGeneroRepository.AtualizarUrl(System.Int32,webapi.Filmes.Domains.GeneroDomain)">
            <summary>
            Atualizar objeto existente passando o seu id pela url
            </summary>
            <param name="id">Id do objeto que será atualizado</param>
            <param name="genero">Objeto atualizado(novas informações)</param>
        </member>
        <member name="M:webapi.Filmes.Interfaces.IGeneroRepository.Deletar(System.Int32)">
            <summary>
            Deletar um objeto
            </summary>
            <param name="id">Id do objeto que será deletado</param>
        </member>
        <member name="M:webapi.Filmes.Interfaces.IGeneroRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um objeto através do seu id
            </summary>
            <param name="id">Id do objeto a ser buscado</param>
            <returns>Objeto buscado</returns>
        </member>
        <member name="F:webapi.Filmes.Repositories.FilmeRepository.StringConexao">
            <summary>
            String de conexão com o banco de dados que recebe os seguintes parâmetros:
            Data Source: Nome do servidor 
            Initial Catalog: Nome do banco de dados
            Autentificação:
                -Windows: Integrated Security = true
                -SqlServer: User Id = sa; Pwd = Senha
            </summary>
        </member>
        <member name="M:webapi.Filmes.Repositories.FilmeRepository.webapi#Filmes#Interfaces#IFilmeRepository#BuscarPorId(System.Int32)">
            <summary>
            Busca um  por ID
            </summary>
            <param name="id">Objeto buscado por ID</param>
        </member>
        <member name="M:webapi.Filmes.Repositories.FilmeRepository.Cadastrar(webapi.Filmes.Domains.FilmeDomain)">
            <summary>
            Cadastrar um novo filme
            </summary>
            <param name="novoFilme">Objeto com as informações que serão cadastradas</param>
        </member>
        <member name="M:webapi.Filmes.Repositories.FilmeRepository.ListarTodos">
            <summary>
            Listar todos os objetos filme
            </summary>
            <returns>Lista de objetos (filme)</returns>
        </member>
        <member name="F:webapi.Filmes.Repositories.GeneroRepository.StringConexao">
            <summary>
            String de conexão com o banco de dados que recebe os seguintes parâmetros:
            Data Source: Nome do servidor 
            Initial Catalog: Nome do banco de dados
            Autentificação:
                -Windows: Integrated Security = true
                -SqlServer: User Id = sa; Pwd = Senha
            </summary>
        </member>
        <member name="M:webapi.Filmes.Repositories.GeneroRepository.webapi#Filmes#Interfaces#IGeneroRepository#BuscarPorId(System.Int32)">
            <summary>
            Busca um genero por ID
            </summary>
            <param name="id">Objeto buscado por ID</param>
        </member>
        <member name="M:webapi.Filmes.Repositories.GeneroRepository.Cadastrar(webapi.Filmes.Domains.GeneroDomain)">
            <summary>
            Cadastrar um novo gênero
            </summary>
            <param name="novoGenero">Objeto com as informações que serão cadastradas</param>
        </member>
        <member name="M:webapi.Filmes.Repositories.GeneroRepository.Deletar(System.Int32)">
            <summary>
            Deleta um gênero
            </summary>
            <param name="id">Objetos que serão excluidos</param>
        </member>
        <member name="M:webapi.Filmes.Repositories.GeneroRepository.ListarTodos">
            <summary>
            Listar todos os objetos gêneros
            </summary>
            <returns>Lista de objetos (gêneros)</returns>
        </member>
    </members>
</doc>
